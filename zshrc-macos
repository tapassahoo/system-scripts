# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="Eastwood"
ZSH_THEME="gentoo"
# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#

plugins=(
  git
  python
  bundler
  dotenv
  macos
  rake
  rbenv
  ruby
  charm
)

plugins=(
	z
    zsh-autosuggestions
	zsh-syntax-highlighting
	vimwiki/vimwiki
)

plugins=(z zsh-autosuggestions)

function acp () {
  git add .
  os=`uname`
  git commit -m "$os:Updated on $(date +"%d-%m-%Y")"
  git push
}
export acp

# Activate the plugins
source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

if [ -f ~/.bash_profile ]; then
  . ~/.bash_profile
fi

if [ -f ~/.zprofile ]; then
  . ~/.zprofile
fi

export NVM_DIR="$HOME/.nvm"
  [ -s "/usr/local/opt/nvm/nvm.sh" ] && \. "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
  [ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion
export EDITOR=vim
export VISUAL="$EDITOR"
#export PATH="/usr/local/opt/python@3.10/bin:$PATH"
#export PKG_CONFIG_PATH="/usr/local/opt/python@3.10/lib/pkgconfig"

setopt extended_glob

alias showFiles='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder /System/Library/CoreServices/Finder.app'
alias hideFiles='defaults write com.apple.finder AppleShowAllFiles NO; killall Finder /System/Library/CoreServices/Finder.app'
alias singleApp='defaults write com.apple.dock single-app -bool true; killall Dock'
alias multipleApps='defaults write com.apple.dock single-app -bool false; killall Dock'
alias cursorBlink='defaults write -g NSTextInsertionPointBlinkPeriodOn -float 200'
alias cursorBlinkOff='defaults write -g NSTextInsertionPointBlinkPeriodOff -float 200'
alias cursorBlinkDefault='defaults delete -g NSTextInsertionPointBlinkPeriodOn'

alias gh='open https://github.com/tapassahoo'
alias grammarly='open https://app.grammarly.com'
alias dictionary='open https://dictionary.cambridge.org'
alias shortcuts='open https://support.apple.com/en-in/guide/terminal/trmlshtcts/mac'
alias libgen='open https://libgen.is'
alias scihub='open https://sci-hub.hkvisa.net'
alias wolfram='open https://www.wolframalpha.com'
alias getbib='open https://scholar.google.com'
alias wpd='open https://apps.automeris.io/wpd/'
alias taskwarrior='open https://ostechnix.com/taskwarrior-command-line-todo-task-manager-application/'
alias manuscript='open https://jcp.peerx-press.org/cgi-bin/main.plex\?form_type\=dt_folder\&j_id\=62\&ms_id_key\=855ftdX7F74OysE1Q42h2iePVjlQ\&ft_key\=tLg1HHWYwHbAJtWeiHSQJw\&ndt\=AC0A7AZ\&stage\=dat_post_decision_ms'
alias bhsm='open https://bhsmcampuscare.in'
alias viki='open file:///Users/tsahoo/vimwiki_html/index.html'

setopt +o nomatch
function ? () { echo "$*" | bc ; } 
export ?

alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

export PYTHONPATH="$HOME/academic-project/exact-diagonalization:$PYTHONPATH"
export PYTHONPATH="$HOME/academic-project/MoRiBS-PIGS/:$PYTHONPATH"


# My aliases
alias which='which-command'
alias sshnlogn='ssh -X nlogn'
alias sshfeynman='ssh -X feynman'
alias sshgraham='ssh -X graham'
alias sshcedar='ssh -X cedar'
alias sshsnbncbs='ssh -X snbncbs'
alias shutdown='sudo shutdown -h now'
alias restart='sudo shutdown -r now'
alias g++='/usr/local/bin/g++'
alias gcc='/usr/local/bin/gcc'


export LC_CTYPE="en_US.UTF-8"

export PATH="/usr/local/bin:$PATH"
export PATH=/Library/TeX/texbin/:$PATH
export PATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:$PATH
# If you need to have python@3.10 first in your PATH, run:
export PATH="/usr/local/opt/python@3.10/bin:$PATH"

# For compilers to find python@3.10 you may need to set:
export LDFLAGS="-L/usr/local/opt/python@3.10/lib"

# For pkg-config to find python@3.10 you may need to set:
export PKG_CONFIG_PATH="/usr/local/opt/python@3.10/lib/pkgconfig"
alias python='/usr/local/opt/python@3.10/bin/python3'
alias pyenv='source ~/venv/bin/activate'
export PATH="/usr/local/opt/python@3.10/bin:$PATH"

compresspdf () {
    echo 'Usage: compresspdf [input file] [output file] [screen|ebook|printer|prepress]'
    gs -sDEVICE=pdfwrite -dNOPAUSE -dQUIET -dBATCH -dPDFSETTINGS=/${3:-"screen"} -dCompatibilityLevel=1.4 -sOutputFile="$2" "$1"
}

cpdf () { 
  gs -q -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile="$1" "${@:2}"
}
